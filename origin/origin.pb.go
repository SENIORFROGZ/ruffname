// Code generated by protoc-gen-go. DO NOT EDIT.
// source: metrics/origin/origin.proto

package origin

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Origin_Product int32

const (
	Origin_no_product   Origin_Product = 0
	Origin_distribution Origin_Product = 1
)

var Origin_Product_name = map[int32]string{
	0: "no_product",
	1: "distribution",
}

var Origin_Product_value = map[string]int32{
	"no_product":   0,
	"distribution": 1,
}

func (x Origin_Product) String() string {
	return proto.EnumName(Origin_Product_name, int32(x))
}

func (Origin_Product) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3e48f89f2cb21426, []int{0, 0}
}

type Origin_Service int32

const (
	Origin_no_service  Origin_Service = 0
	Origin_sketch_aggr Origin_Service = 1
)

var Origin_Service_name = map[int32]string{
	0: "no_service",
	1: "sketch_aggr",
}

var Origin_Service_value = map[string]int32{
	"no_service":  0,
	"sketch_aggr": 1,
}

func (x Origin_Service) String() string {
	return proto.EnumName(Origin_Service_name, int32(x))
}

func (Origin_Service) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3e48f89f2cb21426, []int{0, 1}
}

// MetricType describes the origin metric type
// It is sent by the internal services submitting metrics (like sketch-aggr)
// and it determines the behavior the consumers should have regarding the metric
type Origin_MetricType int32

const (
	// metric_type_default is the default metric type
	// typically, metrics not submitted internally will have this type
	Origin_metric_type_default Origin_MetricType = 0
	// metric_type_dist_aggr is a type of metrics submitted by the distribution pipeline
	// the metric names associated to this type can have two forms:
	// n_o_i_n_d_e_x.pct_aggr.* or n_o_i_n_d_e_x.summary_aggr.*
	// it has the tags configured for the given distribution metric
	// this metric is used by the query system
	Origin_metric_type_dist_aggr Origin_MetricType = 1
	// metric_type_dist_input is a type of metrics submitted by the distribution pipeline
	// the metric names associated to this type look like n_o_i_n_d_e_x.sketch.input_metric.*
	// it has all the original tags (but only dummy points)
	// it is used for billing, and also for the tags dropdown on the distribution metrics page
	Origin_metric_type_dist_input Origin_MetricType = 2
	// metric_type_dist_source is a type of metrics submitted by the distribution pipeline
	// the metric names are the original ones
	// it has only the tags configured for the given distribution metric (and only dummy points)
	// and is used to provide tag completion in the graph editor
	Origin_metric_type_dist_source Origin_MetricType = 3
	// metric_type_dist_passthrough is a type of metrics submitted by the distribution pipeline
	// the metric names look like n_o_i_n_d_e_x.summary_aggr.*
	// it has the all the original tags and points
	// this metric is used by the query system
	Origin_metric_type_dist_passthrough Origin_MetricType = 4
)

var Origin_MetricType_name = map[int32]string{
	0: "metric_type_default",
	1: "metric_type_dist_aggr",
	2: "metric_type_dist_input",
	3: "metric_type_dist_source",
	4: "metric_type_dist_passthrough",
}

var Origin_MetricType_value = map[string]int32{
	"metric_type_default":          0,
	"metric_type_dist_aggr":        1,
	"metric_type_dist_input":       2,
	"metric_type_dist_source":      3,
	"metric_type_dist_passthrough": 4,
}

func (x Origin_MetricType) String() string {
	return proto.EnumName(Origin_MetricType_name, int32(x))
}

func (Origin_MetricType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3e48f89f2cb21426, []int{0, 2}
}

type Origin struct {
	Product              Origin_Product    `protobuf:"varint,1,opt,name=product,proto3,enum=origin.Origin_Product" json:"product,omitempty"`
	Service              Origin_Service    `protobuf:"varint,2,opt,name=service,proto3,enum=origin.Origin_Service" json:"service,omitempty"`
	MetricType           Origin_MetricType `protobuf:"varint,3,opt,name=metric_type,json=metricType,proto3,enum=origin.Origin_MetricType" json:"metric_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Origin) Reset()         { *m = Origin{} }
func (m *Origin) String() string { return proto.CompactTextString(m) }
func (*Origin) ProtoMessage()    {}
func (*Origin) Descriptor() ([]byte, []int) {
	return fileDescriptor_3e48f89f2cb21426, []int{0}
}

func (m *Origin) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Origin.Unmarshal(m, b)
}
func (m *Origin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Origin.Marshal(b, m, deterministic)
}
func (m *Origin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Origin.Merge(m, src)
}
func (m *Origin) XXX_Size() int {
	return xxx_messageInfo_Origin.Size(m)
}
func (m *Origin) XXX_DiscardUnknown() {
	xxx_messageInfo_Origin.DiscardUnknown(m)
}

var xxx_messageInfo_Origin proto.InternalMessageInfo

func (m *Origin) GetProduct() Origin_Product {
	if m != nil {
		return m.Product
	}
	return Origin_no_product
}

func (m *Origin) GetService() Origin_Service {
	if m != nil {
		return m.Service
	}
	return Origin_no_service
}

func (m *Origin) GetMetricType() Origin_MetricType {
	if m != nil {
		return m.MetricType
	}
	return Origin_metric_type_default
}

func init() {
	proto.RegisterEnum("origin.Origin_Product", Origin_Product_name, Origin_Product_value)
	proto.RegisterEnum("origin.Origin_Service", Origin_Service_name, Origin_Service_value)
	proto.RegisterEnum("origin.Origin_MetricType", Origin_MetricType_name, Origin_MetricType_value)
	proto.RegisterType((*Origin)(nil), "origin.Origin")
}

func init() {
	proto.RegisterFile("metrics/origin/origin.proto", fileDescriptor_3e48f89f2cb21426)
}

var fileDescriptor_3e48f89f2cb21426 = []byte{
	// 308 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0x3b, 0x4f, 0xc3, 0x30,
	0x14, 0x85, 0x9b, 0x16, 0xb5, 0xd2, 0x2d, 0x2a, 0x96, 0x11, 0x7d, 0x50, 0x86, 0x2a, 0x13, 0xe2,
	0x91, 0x20, 0xd8, 0x18, 0x51, 0x57, 0x04, 0x2a, 0x4c, 0x2c, 0x51, 0xe2, 0x18, 0xc7, 0x82, 0xc4,
	0x96, 0x7d, 0x8d, 0xd4, 0xdf, 0xc2, 0xc0, 0x5f, 0x45, 0x4d, 0x5c, 0x5e, 0x61, 0xca, 0x8d, 0xbe,
	0x73, 0x7c, 0x8e, 0x74, 0x60, 0x5e, 0x72, 0x34, 0x92, 0xd9, 0x58, 0x19, 0x29, 0x64, 0xe5, 0x3f,
	0x91, 0x36, 0x0a, 0x15, 0xed, 0x37, 0x7f, 0xe1, 0x47, 0x0f, 0xfa, 0x77, 0xf5, 0x49, 0x2f, 0x60,
	0xa0, 0x8d, 0xca, 0x1d, 0xc3, 0x69, 0xb0, 0x08, 0x8e, 0x47, 0x97, 0xe3, 0xc8, 0x5b, 0x1a, 0x41,
	0x74, 0xdf, 0xd0, 0xd5, 0x56, 0xb6, 0x71, 0x58, 0x6e, 0xde, 0x24, 0xe3, 0xd3, 0xee, 0xbf, 0x8e,
	0x87, 0x86, 0xae, 0xb6, 0x32, 0x7a, 0x0d, 0xc3, 0xa6, 0x55, 0x82, 0x6b, 0xcd, 0xa7, 0xbd, 0xda,
	0x35, 0xfb, 0xe3, 0xba, 0xad, 0x15, 0x8f, 0x6b, 0xcd, 0x57, 0x50, 0x7e, 0xdd, 0xe1, 0x29, 0x0c,
	0x7c, 0x03, 0x3a, 0x02, 0xa8, 0x54, 0xe2, 0x6b, 0x90, 0x0e, 0x25, 0xb0, 0x9b, 0x4b, 0x8b, 0x46,
	0x66, 0x0e, 0xa5, 0xaa, 0x48, 0x10, 0x9e, 0xc0, 0xc0, 0x87, 0x7b, 0xb1, 0x6f, 0x40, 0x3a, 0x74,
	0x0f, 0x86, 0xf6, 0x85, 0x23, 0x2b, 0x92, 0x54, 0x08, 0x43, 0x82, 0xf0, 0x3d, 0x00, 0xf8, 0xce,
	0xa4, 0x13, 0xd8, 0xff, 0xd1, 0x31, 0xc9, 0xf9, 0x73, 0xea, 0x5e, 0x37, 0x29, 0x33, 0x38, 0xf8,
	0x05, 0xa4, 0x45, 0xff, 0x04, 0x3d, 0x84, 0x71, 0x0b, 0xc9, 0x4a, 0x3b, 0x24, 0x5d, 0x3a, 0x87,
	0x49, 0x8b, 0x59, 0xe5, 0x0c, 0xe3, 0xa4, 0x47, 0x17, 0x70, 0xd4, 0x82, 0x3a, 0xb5, 0x16, 0x0b,
	0xa3, 0x9c, 0x28, 0xc8, 0xce, 0x4d, 0xf4, 0x74, 0x26, 0x24, 0x16, 0x2e, 0x8b, 0x98, 0x2a, 0xe3,
	0x65, 0x8a, 0xe9, 0x52, 0x89, 0x38, 0xcf, 0xcf, 0x85, 0x8a, 0x75, 0x16, 0xfb, 0x91, 0x75, 0xe6,
	0xf7, 0xcd, 0xfa, 0xf5, 0xc0, 0x57, 0x9f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x4d, 0x7c, 0xb3, 0xb1,
	0xff, 0x01, 0x00, 0x00,
}
